name: Benchmark PR

on:
  pull_request:
    branches:
      - main

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Julia
        uses: julia-actions/setup-julia@v1

      - name: Install dependencies
        run: |
          julia -e 'using Pkg; Pkg.add("BenchmarkTools"); Pkg.add("JSON")'

      - name: Run benchmarks and update leaderboard
        run: |
          # Get the PR author's username from the GitHub context
          PR_AUTHOR=$(jq -r '.pull_request.user.login' "$GITHUB_EVENT_PATH")
          
          # Get the benchmark result from the JSON file
          EXECUTION_TIME=$(jq -r '.benchmark_results[0].time' results.json)
          
          # Ensure the docs folder exists
          mkdir -p docs
          
          # Append the benchmark result to docs/leaderboard.md with the PR author's username
          echo "| $PR_AUTHOR | $EXECUTION_TIME |" >> docs/leaderboard.md
          
          # Discard changes in unwanted files (e.g., results.json)
          git checkout -- results.json scripts/benchmark.jl
          
          # Configure Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Fetch and switch to the docs branch
          git fetch origin docs
          git checkout docs || git checkout -b docs
          
          # Stage and commit changes to docs/leaderboard.md only
          git add docs/leaderboard.md
          git commit -m "Update docs/leaderboard.md with $PR_AUTHOR benchmark" || echo "No changes to commit"
          
          # Pull latest changes from the docs branch to avoid conflicts
          git pull origin docs --rebase --autostash || echo "No changes to rebase"
          
          # Push the updated docs/leaderboard.md
          git push origin docs || echo "No changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure that 'workflow' permissions are enabled in the repository
